#pragma warning(disable:4996)
#include<iostream>
#include<string>
#include<malloc.h>
//针对n<50写的高精，并不能通用
using namespace std;

int pool[50][10000];
int usefulbit[51];

void muti(int x,int n){
	for (int i = 9999; i >= 9999 - usefulbit[n] + 1; i--) {
		pool[n][i] *= x;
	}
	for (int i = 9999; i > 9999 - usefulbit[n] + 1; i--) {
		if (pool[n][i] > 9) {
			pool[n][i - 1] += pool[n][i] / 10;
			pool[n][i] %= 10;
		}
	}
	int bai = 0, shi = 0;
	if (pool[n][9999 - usefulbit[n] + 1] > 9) {
		if (pool[n][9999 - usefulbit[n] + 1] > 99) {
			bai = 1;
		}
		shi = 1;
		pool[n][9999 - usefulbit[n] - 1] = pool[n][9999 - usefulbit[n] + 1] / 100;
		pool[n][9999 - usefulbit[n]] = (pool[n][9999 - usefulbit[n] + 1] / 10) % 10;
		pool[n][9999 - usefulbit[n] + 1] %= 10;
		if (bai == 1) {
			usefulbit[n] += 2;
		}
		else if(shi==1){
			usefulbit[n] += 1;
		}
	}
}
void add(int n) {
	int max = (usefulbit[n] > usefulbit[n - 1]) ? usefulbit[n] : usefulbit[n - 1];
	usefulbit[n - 1] = max;
	for (int i = 9999; i > 9999 - max; i--) {
		pool[n - 1][i] += pool[n][i];
	}
	for (int i = 9999; i > 10000 - max; i--) {
		if (pool[n - 1][i] > 9) {
			pool[n - 1][i - 1] += (pool[n - 1][i] / 10);
			pool[n - 1][i] %= 10;
		}
	}
	if (pool[n - 1][9999 - max] > 9) {
		pool[n - 1][9999 - max - 1] += (pool[n - 1][9999 - max] / 10);
		pool[n - 1][9999 - max] %= 10;
		usefulbit[n - 1] += 1;
	}
}
int main() {
	int n;
	cin >> n;
	for (int j = 0; j <= n; j++) {
		for (int i = 0; i < 10000; i++) {
			pool[j][i] = 0;
		}
		pool[j][9999] = 1;
		usefulbit[j] = 1;
	}
	for (int j = n; j > 0; j--) {
		for (int i = j; i > 0; i--) {
			muti(i, j);
		}
	}
	for (int j = n; j > 1; j--) {
		add(j);//问题出在add函数上
	}
	for (int i = 9999 - usefulbit[1] + 1; i <= 9999; i++) {
		printf("%d", pool[1][i]);
	}
}